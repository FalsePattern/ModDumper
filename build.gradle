plugins {
    id 'idea'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
}

var outputJar = 'build/tmp/deobf.jar'
task bon(type: Exec) {
    workingDir('.')
    commandLine('java', '-jar', bonJar, '--inputJar', inputJar, '--mappingsVer', mappingVersion, '--outputJar', outputJar)
}
task deobfJar(type: Jar) {
    dependsOn(bon)
    from zipTree(outputJar)
    getArchiveBaseName().set(packageName + '-' + packageVersion)
    getArchiveClassifier().set('deobf')
}

// publishing
ext.getMavenSettingsCredentials = {
    def userHome = System.getProperty( "user.home" )
    File mavenSettings = new File(userHome, ".m2/settings.xml")
    def xmlSlurper = new XmlSlurper()
    def output = xmlSlurper.parse(mavenSettings)
    return output."servers"."server"
}

ext.getCredentials = {
    def entries = ext.getMavenSettingsCredentials()
    for (entry in entries) {
        if ( entry."id".text() == repositoryName) {
            return [username: entry.username.text(), password: entry.password.text()]
        }
    }
}
publishing {
    publications {
        maven(MavenPublication) {
            artifact source: deobfJar, classifier: "deobf"

            groupId = groupName
            artifactId = packageName
            version = packageVersion
        }
    }

    repositories {
        maven {
            name = repositoryName
            url = repositoryUrl
            def creds = getCredentials()
            credentials {
                username = creds == null ? "none" : creds.username
                password = creds == null ? "none" : creds.password
            }
        }
    }
}
